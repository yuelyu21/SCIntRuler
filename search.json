[{"path":"https://yuelyu21.github.io/SCIntRuler/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 SCIntRuler authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/articles/SCIntRuler.html","id":"install-the-package","dir":"Articles","previous_headings":"","what":"Install the Package","title":"Get Started","text":"install package, need install batchelor package Bioconductor: , install SCIntRuler, use following command: Load package:","code":"# if (!requireNamespace(\"BiocManager\", quietly = TRUE)) #     install.packages(\"BiocManager\") # BiocManager::install(\"batchelor\") #devtools::install_github(\"yuelyu21/SCIntRuler\") library(SCIntRuler)"},{"path":"https://yuelyu21.github.io/SCIntRuler/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yue Lyu. Author, maintainer.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lyu Y (2024). SCIntRuler: SCIntRuler: Guiding integration multiple single-cell RNA-seq datasets. R package version 0.0.0.9000, https://yuelyu21.github.io/SCIntRuler/, https://github.com/yuelyu21/SCIntRuler.","code":"@Manual{,   title = {SCIntRuler: SCIntRuler: Guiding the integration of multiple single-cell RNA-seq datasets},   author = {Yue Lyu},   year = {2024},   note = {R package version 0.0.0.9000, https://yuelyu21.github.io/SCIntRuler/},   url = {https://github.com/yuelyu21/SCIntRuler}, }"},{"path":[]},{"path":"https://yuelyu21.github.io/SCIntRuler/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"SCIntRuler: Guiding the integration of multiple single-cell RNA-seq datasets","text":"accumulation single-cell RNA-seq (scRNA-seq) studies highlights potential benefits integrating multiple datasets. augmenting sample sizes enhancing analytical robustness, integration can lead insightful biological conclusions. However, challenges arise due inherent diversity batch discrepancies within across studies. SCIntRuler, novel R package, addresses challenges guiding integration multiple scRNA-seq datasets.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/index.html","id":"why-scintruler","dir":"","previous_headings":"","what":"Why SCIntRuler?","title":"SCIntRuler: Guiding the integration of multiple single-cell RNA-seq datasets","text":"Integrating scRNA-seq datasets can complex due various factors, including batch effects sample diversity. Key decisions – whether integrate datasets, method choose integration, best handle inherent data discrepancies – crucial. SCIntRuler offers statistical metric aid decisions, ensuring robust accurate analyses.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"SCIntRuler: Guiding the integration of multiple single-cell RNA-seq datasets","text":"Informed Decision Making: Helps researchers decide necessity data integration suitable method. Flexibility: Suitable various scenarios, accommodating different levels data heterogeneity. Robustness: Enhances analytical robustness joint analyses merged integrated scRNA-seq datasets. User-Friendly: Streamlines decision-making processes, simplifying complexities involved scRNA-seq data integration.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"SCIntRuler: Guiding the integration of multiple single-cell RNA-seq datasets","text":"First, install batchelor package Bioconductor: ```R ## Installation (!requireNamespace(“BiocManager”, quietly = TRUE)) install.packages(“BiocManager”) BiocManager::install(“batchelor”)","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/index.html","id":"to-install-scintruler-use-the-following-command","dir":"","previous_headings":"","what":"To install SCIntRuler, use the following command:","title":"SCIntRuler: Guiding the integration of multiple single-cell RNA-seq datasets","text":"devtools::install_github(“yuelyu21/SCIntRuler”) # Load SCIntRuler library(SCIntRuler)","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/CalcuSCIR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate SCIntRuler — CalcuSCIR","title":"Calculate SCIntRuler — CalcuSCIR","text":"Calculate SCIntRuler","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/CalcuSCIR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate SCIntRuler — CalcuSCIR","text":"","code":"CalcuSCIR(fullcluster, seuratlist, testres, p = 0.1)"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/CalcuSCIR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate SCIntRuler — CalcuSCIR","text":"fullcluster list clusters generated function GetCluster() seuratlist list Seurat objects, usually can got SplitObject(). testres Result function PermTest() p P-value used cut-, default value 0.1","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/CalcuSCIR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate SCIntRuler — CalcuSCIR","text":"SCIntRuler","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/CalcuSCIR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate SCIntRuler — CalcuSCIR","text":"","code":"if (FALSE) { # Create example data for fullcluster (mock data) seuratlist <- SplitObject(seuratobj, split.by = \"Study\") fullcluster <- GetCluster(seuratist) testres <- PermTest(fullcluster,distmat,15) CalcuSCIR(fullcluster, seuratlist, testres) }"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/FindCell.html","id":null,"dir":"Reference","previous_headings":"","what":"Find cells indicating shared biological features across conditions — FindCell","title":"Find cells indicating shared biological features across conditions — FindCell","text":"Find cells indicating shared biological features across conditions","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/FindCell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find cells indicating shared biological features across conditions — FindCell","text":"","code":"FindCell(seuratobj, seuratlist, fullcluster, distmat, firstn = 15)"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/FindCell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find cells indicating shared biological features across conditions — FindCell","text":"seuratobj Seurat object samples/subjects merged together. seuratlist list Seurat objects, usually can got SplitObject(). fullcluster list clusters generated function GetCluster(). distmat list distance vectors generated function FindNNDist(). firstn number nearest cells detected want include permutation test. Default 15.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/FindCell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find cells indicating shared biological features across conditions — FindCell","text":"list two vectors: one cluster sample highlighted second one cells selected.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/FindCell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find cells indicating shared biological features across conditions — FindCell","text":"","code":"if (FALSE) { # Create example Seurat object seuratobj <- CreateSeuratObject(...) # Create example list of Seurat objects seuratlistseuratlist <- SplitObject(seuratobj, split.by = \"Study\") # Create example fullcluster (mock data) fullcluster <- GetCluster(seuratlist) # Create example distmat (mock data) distmat <- FindNNDist(fullcluster, normCount, meaningn = 20)  FindCell(seuratobj, seuratlist, fullcluster, distmat, 15) }"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/FindNNDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the nearest neighbors — FindNNDist","title":"Find the nearest neighbors — FindNNDist","text":"Find nearest neighbors","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/FindNNDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the nearest neighbors — FindNNDist","text":"","code":"FindNNDist(fullcluster, normCount, meaningn = 20)"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/FindNNDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the nearest neighbors — FindNNDist","text":"fullcluster list clusters generated function GetCluster. normCount list normalized gene count matrix generated function NormData. meaningn default 20","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/FindNNDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the nearest neighbors — FindNNDist","text":"list distance vectors","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/FindNNDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the nearest neighbors — FindNNDist","text":"","code":"if (FALSE) { # Create example data for fullcluster (mock data) fullcluster <- GetCluster(seuratlist) # Create example data for normCount (mock data) normCount <- NormData(seuratlist) # Define meaningn meaningn <- 20  FindNNDist(fullcluster, normCount, meaningn = meaningn) }"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/GetCluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Get broad and fine clusters — GetCluster","title":"Get broad and fine clusters — GetCluster","text":"Get broad fine clusters","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/GetCluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get broad and fine clusters — GetCluster","text":"","code":"GetCluster(seuratlist, n1 = 50, n2 = 200)"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/GetCluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get broad and fine clusters — GetCluster","text":"seuratlist list Seurat objects, usually can got SplitObject(). n1 number cells smaller n1, cluster remain unchanged called rare cluster. default value n1 50. n2 count cells within broad cluster n2, cluster subdivided randomly three fine clusters. cell count falls within range n1 n2, two fine clusters generated randomly. Default value 200.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/GetCluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get broad and fine clusters — GetCluster","text":"list data frames.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/GetCluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get broad and fine clusters — GetCluster","text":"","code":"if (FALSE) { # Assuming 'seuratlist' is a list of Seurat objects seuratlist <- SplitObject(seuratobj, split.by = \"Study\") fullcluster <- GetCluster(seuratlist) }"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/NormData.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalized RNA data matrix — NormData","title":"Normalized RNA data matrix — NormData","text":"Normalized RNA data matrix","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/NormData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalized RNA data matrix — NormData","text":"","code":"NormData(seuratlist)"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/NormData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalized RNA data matrix — NormData","text":"seuratlist list Seurat objects, usually can got SplitObject().","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/NormData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalized RNA data matrix — NormData","text":"list matrix.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/NormData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalized RNA data matrix — NormData","text":"","code":"if (FALSE) { # Assuming 'seurat_object_list' is a list of Seurat objects seuratlist <- SplitObject(seuratobj, split.by = \"Study\") normCount <- NormData(seuratlist) }"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/PermTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Permutation Test — PermTest","title":"Permutation Test — PermTest","text":"Permutation Test","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/PermTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permutation Test — PermTest","text":"","code":"PermTest(fullcluster, distmat, firstn)"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/PermTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permutation Test — PermTest","text":"fullcluster list clusters generated function GetCluster() distmat list distance vectors generated function FindNNDist(). firstn number nearest cells detected want include permutation test.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/PermTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Permutation Test — PermTest","text":"list two lists, one relative within-distance another p-value permutation test. Default 15.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/PermTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Permutation Test — PermTest","text":"","code":"if (FALSE) { # Assuming 'fullcluster' is a list of clusters fullcluster <- GetCluster(seuratlist) # Assuming 'distmat' is a list of normalized gene count matrix distmat <- FindNNDist(fullcluster, normCount, meaningn = 20) PermTest(fullcluster,distmat,15) }"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/PlotSCIR.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot SCIntRuler — PlotSCIR","title":"Plot SCIntRuler — PlotSCIR","text":"Plot SCIntRuler","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/PlotSCIR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot SCIntRuler — PlotSCIR","text":"","code":"PlotSCIR(fullcluster, seuratlist, testres, legendtitle = NULL, title = NULL)"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/PlotSCIR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot SCIntRuler — PlotSCIR","text":"fullcluster list clusters generated function GetCluster. seuratlist list Seurat objects, usually can got SplitObject(). testres Result function PermTest() legendtitle Title legend, default NULL title Title figure, default NULL","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/PlotSCIR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot SCIntRuler — PlotSCIR","text":"ggplot2 object","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/PlotSCIR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot SCIntRuler — PlotSCIR","text":"","code":"if (FALSE) { # Create example data for fullcluster (mock data) seuratlist <- SplitObject(seuratobj, split.by = \"Study\") fullcluster <- GetCluster(seurat_object_list) testres <- PermTest(fullcluster,distmat,15) PlotSCIR(fullcluster, seuratlist, testres) }"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/SummCluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Get maximum number of broad clusters — SummCluster","title":"Get maximum number of broad clusters — SummCluster","text":"Get maximum number broad clusters","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/SummCluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get maximum number of broad clusters — SummCluster","text":"","code":"SummCluster(fullcluster)"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/SummCluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get maximum number of broad clusters — SummCluster","text":"fullcluster list clusters generated function GetCluster()","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/SummCluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get maximum number of broad clusters — SummCluster","text":"list","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/SummCluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get maximum number of broad clusters — SummCluster","text":"","code":"if (FALSE) { # Assuming 'fullcluster' is a list of clusters fullcluster <- GetCluster(seuratlist) SCout <- SummCluster(fullcluster) }"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/crossdist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Cross-Distance Matrix — crossdist","title":"Calculate Cross-Distance Matrix — crossdist","text":"function computes pairwise Euclidean distance rows two matrices.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/crossdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Cross-Distance Matrix — crossdist","text":"m1 numeric matrix. m2 Another numeric matrix.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/crossdist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Cross-Distance Matrix — crossdist","text":"numeric matrix entry [, j] Euclidean distance row m1 row j m2.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/crossdist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Cross-Distance Matrix — crossdist","text":"","code":"if (FALSE) { mat1 <- matrix(1:4, ncol = 2) mat2 <- matrix(5:8, ncol = 2) crossdist(mat1, mat2) }"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/sim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"My Example Dataset — sim_data","title":"My Example Dataset — sim_data","text":"short description dataset.","code":""},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/sim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"My Example Dataset — sim_data","text":"","code":"sim_data"},{"path":"https://yuelyu21.github.io/SCIntRuler/reference/sim_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"My Example Dataset — sim_data","text":"example PBMC data Seurat format assays Count matrix meta.data Meta data cell","code":""}]
